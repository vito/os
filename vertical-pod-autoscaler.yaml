package:
  name: vertical-pod-autoscaler
  version: 1.1.1
  epoch: 1
  description: Autoscaling components for Kubernetes
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - go

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/kubernetes/autoscaler
      tag: vertical-pod-autoscaler-${{package.version}}
      expected-commit: b3968952906c3e523a2913b27e555080c031a458

  - uses: go/bump
    with:
      deps: google.golang.org/protobuf@v1.33.0 golang.org/x/net@v0.23.0
      modroot: vertical-pod-autoscaler

  - uses: go/build
    with:
      modroot: vertical-pod-autoscaler
      packages: ./pkg/admission-controller
      ldflags: -w
      output: admission-controller

  - uses: go/bump
    with:
      deps: google.golang.org/protobuf@v1.33.0 golang.org/x/net@v0.23.0
      modroot: vertical-pod-autoscaler

  - uses: go/build
    with:
      modroot: vertical-pod-autoscaler
      packages: ./pkg/updater
      ldflags: -w
      output: updater

  - uses: go/build
    with:
      modroot: vertical-pod-autoscaler
      packages: ./pkg/recommender
      ldflags: -w
      output: recommender
      vendor: "true"

  - uses: strip

subpackages:
  - name: vertical-pod-autoscaler-updater
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/bin
          mv ${{targets.destdir}}/usr/bin/updater ${{targets.subpkgdir}}/usr/bin

  - name: vertical-pod-autoscaler-recommender
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/bin
          mv ${{targets.destdir}}/usr/bin/recommender ${{targets.subpkgdir}}/usr/bin

update:
  enabled: true
  github:
    identifier: kubernetes/autoscaler
    strip-prefix: vertical-pod-autoscaler-
    use-tag: true
    tag-filter: vertical-pod-autoscaler-

test:
  environment:
    contents:
      packages:
        - vertical-pod-autoscaler-updater
        - vertical-pod-autoscaler-recommender
  pipeline:
    - runs: |
        for component in admission-controller updater recommender; do
          $component -h 2>&1 | grep -q "Usage of $component"
          $component 2>&1 | grep -q "unable to load in-cluster configuration"
        done
