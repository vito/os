#nolint:git-checkout-must-use-github-updates
package:
  name: chromium
  version: 124.0.6367.91
  epoch: 0
  description: "Open souce version of Google's chrome web browser"
  copyright:
    - license: BSD-3-Clause
  target-architecture:
    - x86_64
  dependencies:
    runtime:
      - busybox
      - coreutils
      - font-opensans
      - fontconfig
      - libnss
      - mesa

environment:
  contents:
    packages:
      - alsa-lib-dev
      - at-spi2-core-dev
      - bash
      - bison
      - brotli-dev
      - build-base
      - busybox
      - bzip2-dev
      - ca-certificates-bundle
      - cairo-dev
      - cups-dev
      - curl
      - curl-dev
      - dav1d-dev
      - dbus-dev
      - dbus-glib-dev
      - elfutils
      - elfutils-dev
      - eudev-dev
      - expat-dev
      - ffmpeg-dev
      - findutils
      - flac-dev
      - flex
      - freetype-dev
      - fribidi-dev
      - git
      - glib-dev
      - gn
      - gnutar
      - gperf
      - gtk-3-dev
      - gzip
      - harfbuzz-dev
      - harfbuzz-static
      - hwdata-dev
      - krb5-dev
      - lcms2-dev
      - libbsd-dev
      - libcap-dev
      - libdrm-dev
      - libevent-dev
      - libffi-dev
      - libgcrypt-dev
      - libjpeg-turbo-dev
      - libnspr-dev
      - libnss-dev
      - libsecret-dev
      - libusb-dev
      - libva-dev
      - libwebp-dev
      - libxcomposite-dev
      - libxcursor-dev
      - libxdamage
      - libxdamage-dev
      - libxft-dev
      - libxi-dev
      - libxinerama-dev
      - libxkbcommon
      - libxkbcommon-dev
      - libxml2-dev
      - libxrandr-dev
      - libxshmfence-dev
      - libxslt-dev
      - libxtst
      - libxtst-dev
      - linux-headers
      - mesa-dev
      - mesa-gbm
      - opus-dev
      - pango
      - pango-dev
      - pciutils
      - pciutils-dev
      - perl
      - pulseaudio-dev
      - py3-httplib2
      - py3-setuptools
      - python3
      - qt5-qtbase-dev
      - rust
      - samurai
      - speex-dev
      - sqlite-dev
      - wget
      - xcb-proto
      - xz
      - zlib-dev
      - zstd-dev

pipeline:
  - uses: git-checkout
    with:
      # === INFO === Initial git clone: takes ~3 minutes, needs 6GB disk
      repository: https://chromium.googlesource.com/chromium/src.git
      tag: ${{package.version}}
      depth: 1
      expected-commit: 51df0e5e17a8b0a4f281c1665dbd1b8a0c6b46af
      destination: /home/src

  - runs: |
      cd /home
      time git clone --depth 1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
      export PATH="$PATH:/home/depot_tools"
      # .gclient must be in one directory above chromium's src
      cat <<EOF >/home/.gclient
      # Setup a .gclient config (handled by 'fetch' in upstream instructions)
      solutions = [
        { "name"        : "src",
          "url"         : "https://chromium.googlesource.com/chromium/src.git",
          "managed": False,
          "custom_deps": {},
          "custom_vars": {},
        },
      ]
      EOF
      cat /home/.gclient
      # === INFO === Sync dependencies: takes about 11 minutes, requires 30 GB of disk
      # go back into our chromium src directory
      cd /home/src
      time gclient sync --no-history
      # === INFO === Make node executable: works around permission denial
      cd /home/src
      chmod +x third_party/node/linux/node-linux-x64/bin/node
      # === INFO === Generate config: takes about 30 minutes /
      cd /home/src
      time gn gen /home/src/out/Default --args="
        clang_use_chrome_plugins=false
        chrome_pgo_phase=0
        enable_nocompile_tests_new=false
        is_debug=false
        is_official_build=true
        symbol_level=0
        use_lld=true
        use_sysroot=false
        use_system_freetype=true
        use_system_harfbuzz=true
        use_system_lcms2=true
        use_system_libdrm=true
        use_system_libffi=true
        use_system_libjpeg=true
        use_system_zlib=true
      "
      # === INFO === Compile: takes about 3 hours, 60 GB of disk (on a 32xXeon, 128GBxRAM, 2TBxNVME system)
      cd /home/src
      time autoninja -C /home/src/out/Default chrome chromedriver chrome_crashpad_handler chrome_sandbox
      # === INFO === Install the binaries and libraries
      cd /home/src/out/Default
      mkdir -p ${{targets.destdir}}/usr/bin ${{targets.destdir}}/usr/lib/${{package.name}}
      mv *.so* ${{targets.destdir}}/usr/lib/${{package.name}}
      mv chrome ${{targets.destdir}}/usr/lib/${{package.name}}
      mv chrome_crashpad_handler ${{targets.destdir}}/usr/lib/${{package.name}}
      mv chrome_sandbox ${{targets.destdir}}/usr/lib/${{package.name}}
      mv chromedriver ${{targets.destdir}}/usr/lib/${{package.name}}
      # resources
      mv snapshot_blob.bin ${{targets.destdir}}/usr/lib/${{package.name}}
      mv v8_context_snapshot.bin ${{targets.destdir}}/usr/lib/${{package.name}}
      mv icudtl.dat ${{targets.destdir}}/usr/lib/${{package.name}}
      mv xdg-mime ${{targets.destdir}}/usr/lib/${{package.name}}
      mv xdg-settings ${{targets.destdir}}/usr/lib/${{package.name}}
      mv vk_swiftshader_icd.json ${{targets.destdir}}/usr/lib/${{package.name}}
      mv *.pak ${{targets.destdir}}/usr/lib/${{package.name}}
      mv locales ${{targets.destdir}}/usr/lib/${{package.name}}
      # wrapper
      cd /home/build
      mv chromium-launcher.sh ${{targets.destdir}}/usr/bin/chromium-browser
      # links
      ln -sf /usr/lib/${{package.name}}/chrome ${{targets.destdir}}/usr/bin/chromium
      ln -sf /usr/lib/${{package.name}}/chromedriver ${{targets.destdir}}/usr/bin/chromedriver
      mkdir -p ${{targets.destdir}}/etc/chromium

  - uses: strip
    with:
      opts: -s

subpackages:
  - name: ${{package.name}}-qt
    options:
      no-depends: true
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib/${{package.name}}
          mv ${{targets.destdir}}/usr/lib/${{package.name}}/*qt* ${{targets.subpkgdir}}/usr/lib/${{package.name}}

  - name: ${{package.name}}-lang
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib/${{package.name}}
          mv ${{targets.destdir}}/usr/lib/${{package.name}}/locales ${{targets.subpkgdir}}/usr/lib/${{package.name}}

          # Ensure we provide one locale in the base package
          mv ${{targets.subpkgdir}}/usr/lib/${{package.name}}/locales/en-US.pak ${{targets.destdir}}/usr/lib/${{package.name}}/locales

  # https://github.com/SeleniumHQ/docker-selenium/blob/trunk/NodeChrome/Dockerfile
  - name: chromium-docker-selenium-compat
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/opt/selenium

          ln -sf /usr/lib/chromium/chromedriver ${{targets.subpkgdir}}/opt/selenium/chromedriver-${{package.version}}

          echo "chrome" > ${{targets.subpkgdir}}/opt/selenium/browser_name
          echo ${{package.version}} > ${{targets.subpkgdir}}/opt/selenium/browser_version
          echo "\"goog:chromeOptions\": {\"binary\": \"/usr/bin/chromium-browser\"}" > ${{targets.subpkgdir}}/opt/selenium/browser_binary_location

update:
  enabled: true
  release-monitor:
    identifier: 13344

test:
  environment:
    contents:
      packages:
        - grep
        - posix-libc-utils
        - py3-pip
        - python3
        - wolfi-base
  pipeline:
    - runs: |
        # Ensure all libraries are linked
        ldd /usr/lib/chromium/chrome

        # Check status
        chromium --no-sandbox --headless --disable-gpu --dump-dom https://www.chromestatus.com

        # Test wrapper
        CHROMIUM_USER_FLAGS="--no-sandbox --headless --disable-gpu --dump-dom" chromium-browser https://www.chromestatus.com

        # Test ChromeDriver functionality
        pip3 install selenium
        python3 ./test-chromedriver.py
