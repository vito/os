package:
  name: libffi
  version: 3.4.6
  epoch: 1
  description: "portable foreign function interface library"
  copyright:
    - license: MIT

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - texinfo

pipeline:
  - uses: fetch
    with:
      uri: https://github.com/libffi/libffi/releases/download/v${{package.version}}/libffi-${{package.version}}.tar.gz
      expected-sha256: b0dea9df23c863a7a50e825440f3ebffabd65df1497108e5d437747843895a4e

  - name: Configure
    runs: |
      ./configure \
         --host=${{host.triplet.gnu}} \
         --target=${{host.triplet.gnu}} \
         --prefix=/usr \
         --datadir=/usr/share \
         --enable-portable-binary \
         --enable-pax_emutramp \
         --disable-exec-static-tramp

  - uses: autoconf/make

  - uses: autoconf/make-install

  - uses: strip

subpackages:
  - name: "libffi-dev"
    description: "libffi headers"
    pipeline:
      - uses: split/dev
    dependencies:
      runtime:
        - libffi
    test:
      environment:
        contents:
          packages:
            - build-base
      pipeline:
        - name: Basic closure test
          runs: |
            echo '#include <stdio.h>' > test_closure.c
            echo '#include <ffi.h>' >> test_closure.c
            echo 'void puts_binding(ffi_cif *cif, unsigned int *ret, void* args[], FILE *stream) { *ret = fputs(*(char **)args[0], stream); }' >> test_closure.c
            echo 'int main() { ffi_cif cif; ffi_type *args[1]; ffi_closure *closure; int (*bound_puts)(char *); int rc; closure = ffi_closure_alloc(sizeof(ffi_closure), &bound_puts); if (closure) { args[0] = &ffi_type_pointer; if (ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, &ffi_type_uint, args) == FFI_OK) { if (ffi_prep_closure_loc(closure, &cif, puts_binding, stdout, bound_puts) == FFI_OK) { rc = bound_puts("Hello World!"); } } ffi_closure_free(closure); } return 0; }' >> test_closure.c
            gcc -o test_closure test_closure.c -lffi
            ./test_closure | grep -q Hello\ World || exit 1

  - name: "libffi-doc"
    description: "libffi docs"
    pipeline:
      - uses: split/manpages
      - uses: split/infodir

update:
  enabled: true
  release-monitor:
    identifier: 1611
